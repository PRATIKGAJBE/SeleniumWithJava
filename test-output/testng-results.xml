<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-22T15:57:27 IST" name="Default suite" finished-at="2021-05-22T15:57:39 IST" duration-ms="11403">
    <groups>
    </groups>
    <test started-at="2021-05-22T15:57:27 IST" name="Default test" finished-at="2021-05-22T15:57:39 IST" duration-ms="11403">
      <class name="testng.GoogleSearchTestNG">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:27 IST" name="setUpClass" finished-at="2021-05-22T15:57:32 IST" duration-ms="5127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:32 IST" name="setUp" finished-at="2021-05-22T15:57:33 IST" duration-ms="998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGoogleSearch()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:33 IST" name="testGoogleSearch" finished-at="2021-05-22T15:57:34 IST" duration-ms="156" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [selenium - Google Search] but found [Google]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [selenium - Google Search] but found [Google]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testng.GoogleSearchTestNG.testGoogleSearch(GoogleSearchTestNG.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleSearch -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:34 IST" name="setUp" finished-at="2021-05-22T15:57:34 IST" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGoogleSearchResults(java.lang.String)[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:34 IST" name="testGoogleSearchResults" data-provider="getData" finished-at="2021-05-22T15:57:35 IST" duration-ms="845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Selenium]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleSearchResults -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:35 IST" name="setUp" finished-at="2021-05-22T15:57:35 IST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGoogleSearchResults(java.lang.String)[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:35 IST" name="testGoogleSearchResults" data-provider="getData" finished-at="2021-05-22T15:57:36 IST" duration-ms="868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TestNG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleSearchResults -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:36 IST" name="setUp" finished-at="2021-05-22T15:57:37 IST" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGoogleSearchResults(java.lang.String)[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:37 IST" name="testGoogleSearchResults" data-provider="getData" finished-at="2021-05-22T15:57:38 IST" duration-ms="927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Maven]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleSearchResults -->
        <test-method signature="testGoogleSearchResultsWithExpected(java.lang.String, java.lang.String)[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:38 IST" name="testGoogleSearchResultsWithExpected" data-provider="getDataWithExpected" finished-at="2021-05-22T15:57:38 IST" duration-ms="3" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void testng.GoogleSearchTestNG.testGoogleSearchResultsWithExpected(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testGoogleSearchResultsWithExpected([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Selenium,(java.lang.String) selenium,(java.lang.String) ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void testng.GoogleSearchTestNG.testGoogleSearchResultsWithExpected(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testGoogleSearchResultsWithExpected([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Selenium,(java.lang.String) selenium,(java.lang.String) ]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:905)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleSearchResultsWithExpected -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testng.GoogleSearchTestNG@2abf4075]" started-at="2021-05-22T15:57:38 IST" name="tearDownClass" finished-at="2021-05-22T15:57:39 IST" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testng.GoogleSearchTestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
